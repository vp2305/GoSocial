on:
  push:
    branches:
      - main

permissions:
  contents: write

name: update-version

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Extract latest version from CHANGELOG.md
        id: get_version
        run: |
          VERSION=$(grep -oP '\[\K[0-9]+\.[0-9]+\.[0-9]+' CHANGELOG.md | head -1)
          echo "::set-output name=VERSION::$VERSION"

      - name: Update version in cmd/api/main.go
        run: |
          sed -i "s/const version = \".*\"/const version = \"${{ steps.get_version.outputs.VERSION }}\"/" cmd/api/main.go

      - name: Commit and push if changed
        env:
          GITHUB_TOKEN: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git checkout main
          git pull origin main
          git checkout -b update-version || git checkout update-version
          git pull --rebase origin update-version || echo "No remote branch to pull"
          git add cmd/api/main.go
          git commit -m "Update version to ${{ steps.get_version.outputs.VERSION }}" || echo "No changes to commit"
          git push --set-upstream origin update-version || git push --force --set-upstream origin update-version

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          commit-message: "Update version to ${{ steps.get_version.outputs.VERSION }}"
          branch: update-version
          base: main
          title: "Update version to ${{ steps.get_version.outputs.VERSION }}"
          body: |
            This PR updates the version to ${{ steps.get_version.outputs.VERSION }}.
